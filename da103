Advanced SQL
  
   Week 1


----------------------------------------------------
   --- Combining Data With Multiple Joins ---
----------------------------------------------------

  --For the flight routes highlighted in question 4 combined, would there have been an aircraft that, on average, would use less fuel on the flight routes? 

--The fuel used in liters per flight can be calculated by multiplying the fuel efficiency metric by distance, baggage weight, and number of passengers. 

--What aircraft (manufacturer and sub-type) would you recommend to use for each of these flight routes if you use the average fuel consumption as your guiding metric?

--If the manufacturer and sub-type are not available for flights, we do not need to show the results of these flights.


SELECT 
    aircraft.manufacturer
    , aircraft.ac_subtype
    , AVG(fuel.fuel_efficiency * flights.total_passengers * flights.baggage_weight * routes.distance_flown) AS avg_fuel_consumption

FROM ba_flights flights

LEFT JOIN ba_flight_routes routes ON flights.flight_number = routes.flight_number
INNER JOIN ba_aircraft aircraft ON flights.flight_id = aircraft.flight_id
LEFT JOIN ba_fuel_efficiency fuel on aircraft.ac_subtype = fuel.ac_subtype

WHERE 1=1
   AND routes.departure_city in ('London')
   AND routes.arrival_city in ('Basel', 'Trondheim', 'Glasgow') 
   AND aircraft.manufacturer IS NOT NULL
   AND aircraft.ac_subtype IS NOT NULL

GROUP BY aircraft.manufacturer
    , aircraft.ac_subtype

ORDER BY avg_fuel_consumption
--LIMIT 1
;




  Week 2

------------------------------------------------
   --- Cleaning and Analyzing Messy Data ---
------------------------------------------------

/*Your manager wants to analyze the marketing spend percentage by country, but the data is not 100% clean. He mentions that you can clean the country field by using the sales team information, and shared the following mapping with you: 

UK = United Kingdom
FR = France
ES = Spain
IT = Italy
DACH = Germany

What is the average marketing spend percentage per country?
*/

SELECT * FROM meta_clients

SELECT 
     CASE 
         WHEN sales_team LIKE '%_FR_%' THEN 'France'
         WHEN sales_team LIKE '%_UK_%' THEN 'United Kingdom'
         WHEN sales_team LIKE '%_ES_%' THEN 'Spain'
         WHEN sales_team LIKE '%_IT_%' THEN 'Italy'
         WHEN sales_team LIKE '%_DACH_%' THEN 'Germany'
      ELSE 'REGION'
      END AS clean_country
       , AVG(marketing_spend_perc)
FROM meta_clients
GROUP BY 
        clean_country
    

WEEK 3

-----------------------
    --- CTE'S ---
-----------------------

 /*First, use WITH to replace the NULLs in the product_id column in order_items with ‘P003’.

Then, show the product name, and revenue for product_ids P001-P003 by customer age_group in ascending order.

HINT: “Customer_id” in the customers table  = “user_id” in other tables
 */
 
 
WITH NEW_TBL as (
  select
    *
    , CASE
        WHEN product_id IS NULL THEN 'P003'
        ELSE product_id
      END AS new_product_id
  from order_items
)

select
  cs.age_group
 , ps.product_name
  , sum(nt.sale_price) as total_revenue
from NEW_TBL as nt
 inner join products as ps on ps.product_id = nt.new_product_id
  inner join customers as cs on nt.user_id = cs.customer_id
where 1=1
 and ps.product_id in ('P001', 'P002', 'P003')
group by
  cs.age_group
 , ps.product_name
order by
 cs.age_group asc; 




-----------------------------------------------------------
           --- Window Functions ---
-----------------------------------------------------------


SELECT *,
			 ROW_NUMBER() OVER (ORDER BY created_at DESC) AS row_number

FROM orders

;


SELECT *,
			 LAG(created_at) OVER (ORDER BY created_at ASC) AS previous_value

FROM orders



 
 ---------------------------------------------------------
            --- Partitioning Data ---
 ---------------------------------------------------------


 /*First, use WITH to replace the NULLs in the product_id column in order_items with ‘P003’.

Then, show the product name, and revenue for product_ids P001-P003 by customer age_group in ascending order.

HINT: “Customer_id” in the customers table  = “user_id” in other tables
 */
 
 
WITH NEW_TBL as (
  select
    *
    , CASE
        WHEN product_id IS NULL THEN 'P003'
        ELSE product_id
      END AS new_product_id
  from order_items
)

select
  cs.age_group
 , ps.product_name
  , sum(nt.sale_price) as total_revenue
from NEW_TBL as nt
 inner join products as ps on ps.product_id = nt.new_product_id
  inner join customers as cs on nt.user_id = cs.customer_id
where 1=1
 and ps.product_id in ('P001', 'P002', 'P003')
group by
  cs.age_group
 , ps.product_name
order by
 cs.age_group asc; 
 
 


------------------------------------------------------
      --- Creating Column and Row Totals ---
------------------------------------------------------

SELECT state AS state,
       age_group AS age_group,
       COUNT(customer_id) AS num_customers
  
  
FROM customers
  
GROUP BY ROLLUP(state, age_group)

ORDER BY state
;








